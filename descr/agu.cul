#
# Copyright (C) 2005 Richard Cameron, CiteULike.org
# All rights reserved.
#
# This code is derived from software contributed to CiteULike.org
# by
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by
#		 CiteULike <http://www.citeulike.org> and its
#		 contributors.
# 4. Neither the name of CiteULike nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY CITEULIKE.ORG AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

# Each plugin needs a description so the driver can advertise the details
# to the users on the site
plugin {
	# Integer version number for the plugin code. When this number is incremented,
	# CiteULike may reparse all existing articles with the new code.
	version {1}

	# The name of the plugin, as displayed on the "CiteULike supports..." page
	name {American Geophysical Union}

	# The link the front page of this service
	url {http://www.agu.org}

	# Any additional information which needs to be displayed to the user.
	# E.g. "Experimental support"
	blurb {}

	# Your name
	author {Fergus Gallagher}

	# Your email address
	email {fergus@citeulike.org}

	# Language you wrote the plugin in
	language {python}

	# Regular expression to match URLs that the plugin is
	# *potentially* interested in. Any URL matching this regexp
	# will cause your parser to be invoked. Currently, this will
	# require fork()ing a process, so you should try to reduce the number
	# of false positives by making your regexp as restrictive as possible.
	#
	# If it is not possible to determine whether or not your plugin is
	# interested purely on the basis of the URL, you will have a chance
	# to refine this decision in your code. For now, try to make a reasonable
	# approximation - like, check for URLs on the right hostname
	#
	# Note: Some universities provide mirrors of commericial publishers' sites
	# with different hostnames, so you should provide some leeway in your
	# regexp if that applies to you.
	#
	# Nature have two styles of URLs for their articles.. they seem to be slowly
	# moving to the second.
	regexp {http://www.agu.org/pubs/crossref/([0-9.]+/[^/]+)\.shtml}
}


#
# Linkout formatting
#

# CiteULike doesn't store URLs for articles.
# Instead it stores the raw ingredients required to build the dynamically.
# Each plugin is required to define a small procedure which does this formatting
# See the HOWTO file for more details.
#
# The variables following variables are defined for your use
# in the function: type ikey_1 ckey_1 ikey_2 ckey_2
#
format_linkout AGU {
	return [list "American Geophysical Union"  "http://www.agu.org/pubs/crossref/${ckey_1}.shtml"]
}


#
# TESTS
#

# Each plugin MUST provide a set of tests. The motivation behind this is
# that web scraping code is inherently fragile, and is likely to break whenever
# the provider decides to redisign their site. CiteULike will periodically
# run tests to see if anything has broken.

# Please provide as comprehensive a set of tests as possible.
# If you ever fix a bug in the parser, it is highly recommended that
# you add the offending page as a test case.

#
# This is the RIS test (break with BibTeX - so delete when stable)
#

test {http://www.agu.org/pubs/crossref/2008/2008JB005642.shtml} {
	formatted_url {DOI http://dx.doi.org/10.1029/2008JB005642}
	formatted_url {{American Geophysical Union} http://www.agu.org/pubs/crossref/2008/2008JB005642.shtml}
	linkout {DOI {} 10.1029/2008JB005642 {} {}}
	linkout {AGU {} 2008/2008JB005642 {} {}}
	doi 10.1029/2008JB005642
	volume 113
	year 2008
	month 11
	day 26
	type JOUR
	issn 0148-0227
	start_page B11414
	plugin_version 1
	issue B11
	title {Episodic slow slip events and rate-and-state friction}
	journal {Journal of Geophysical Research - Solid Earth}
	abstract {<p>There are several ways of generating episodic slow slip events in models of rate-and-state friction. Here I explore the possibility
                     that they arise on velocity-weakening faults whose length is &#8220;tuned&#8221; in some sense. Unlike spring-block sliders, which have
                     a unique critical stiffness for instability, elastically deformable faults have multiple length scales (stiffnesses) relevant
                     to nucleation. Slow slip events occur when the fault is large enough to initiate an event but too small for that event to
                     reach dynamic instability. The available window of lengths depends upon the effective fracture energy of the growing nucleation
                     zone. For the &#8220;aging&#8221; evolution law this fracture energy increases rapidly with slip speed, and the range of permissible lengths
                     increases nearly as <i xmlns="">b</i>/(<i xmlns="">b</i> &#8722; <i xmlns="">a</i>), where <i xmlns="">a</i> and <i xmlns="">b</i> are the coefficients of the velocity and state dependence of the frictional strength. This range becomes very large for faults
                     that are near velocity-neutral (<i xmlns="">a</i> &#8764; <i xmlns="">b</i>). However, existing lab data firmly favor the &#8220;slip&#8221; law as a predictor of nucleation style, and for this law the effective
                     fracture energy increases much less rapidly with slip speed. The range of fault lengths capable of hosting slow slip events
                     in this case seems too small to explain why they are common to so many subduction zones. Slow slip can be stabilized over
                     an exceedingly large range of fault lengths if the fracture energy increases with slip speed much more rapidly than for the
                     aging law. An appealing mechanism is inelastic dilation of the fault zone coupled with pore pressure reduction and diffusive
                     recovery.
                  </p>}
	author {Rubin Allan AM {Allan M. Rubin}}
	status ok
}


